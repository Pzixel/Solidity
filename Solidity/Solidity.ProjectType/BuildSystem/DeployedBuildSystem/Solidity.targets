<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|AnyCPU">
      <Configuration>Debug</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|AnyCPU">
      <Configuration>Release</Configuration>
      <Platform>AnyCPU</Platform>
    </ProjectConfiguration>
  </ItemGroup>

  <!-- Capabilities for this project.  Conditions should be based on platform|configuration only. -->
  <ItemGroup>
    <ProjectCapability Include="Solidity" />
    <ProjectCapability Include="UseFileGlobs" />
    <ProjectCapability Include="OpenProjectFile" />
    <ProjectCapability Include="HandlesOwnReload" />
    <ProjectCapability Include="ProjectConfigurationsDeclaredAsItems" />
  </ItemGroup>

  <ItemGroup>
    <PropertyPageSchema Include="
                        $(MSBuildThisFileDirectory)Rules\general.xaml;
                        ">
      <Context>Project</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="
                        $(MSBuildThisFileDirectory)Rules\ProjectItemsSchema.xaml;
                        "/>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)Rules\general_file.xaml">
      <Context>File</Context>
    </PropertyPageSchema>
    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)Rules\scc.xaml">
      <Context>Invisible</Context>
    </PropertyPageSchema>

    <PropertyPageSchema Include="
                        $(MSBuildThisFileDirectory)Rules\folder.xaml;
                        $(MSBuildThisFileDirectory)Rules\none.xaml;
                        ">
      <Context>File;BrowseObject</Context>
    </PropertyPageSchema>

    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)Rules\general.browseobject.xaml">
      <Context>BrowseObject</Context>
    </PropertyPageSchema>

    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)Rules\Sol.xaml;">
      <Context>File;BrowseObject</Context>
    </PropertyPageSchema>
  </ItemGroup>

  <ItemGroup>
    <CopyUpToDateMarker Include="$([MSBuild]::NormalizePath('$(MSBuildProjectDirectory)', '$(IntermediateOutputPath)', '$(MSBuildProjectFile).CopyComplete'))" />
  </ItemGroup>

  <UsingTask
    TaskName="GetOutdatedFiles"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" >

    <ParameterGroup>
      <FileList ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <UpToDateMarker ParameterType="System.String" Required="true" />
      <Result ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          var modifiedFiles = new List<ITaskItem>();
          if(!File.Exists(UpToDateMarker))
          {
            Result = FileList;
          }
          else 
          {
            DateTime markerTimeStamp = File.GetLastWriteTime(UpToDateMarker);
            Result = FileList.Where(file => DateTime.Parse(file.GetMetadata("ModifiedTime")) > markerTimeStamp).ToArray();
          }
          ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="Build" DependsOnTargets="CoreBuild;AfterBuild" />

  <Target Name="CoreBuild">
    <Error Condition="'$(OutDir)' == ''" Text="The OutDir property is missing" />
    <Error Condition="'$(IntermediateOutputPath)' == ''" Text="The IntermediateOutputPath property is missing" />

    <GetOutdatedFiles FileList="@(SolCompile)" UpToDateMarker="@(CopyUpToDateMarker)">
      <Output TaskParameter="Result" ItemName="ChangedFiles"/>
    </GetOutdatedFiles>

    <Exec Command='$(RunCommand) "%(ChangedFiles.Identity)" -o "$(IntermediateOutputPath)" $(RunCommandArguments)' WorkingDirectory="$(RunWorkingDirectory)" Condition="'@(ChangedFiles)' != ''"/>
  </Target>

  <Target Name="AfterBuild">
    <ItemGroup>
      <BinFiles Include="$(IntermediateOutputPath)/*.bin"/>
      <AbiFiles Include="$(IntermediateOutputPath)/*.abi"/>
    </ItemGroup>

    <Copy SourceFiles="@(BinFiles)" DestinationFolder="$(OutDir)" SkipUnchangedFiles="true" Condition="'@(ChangedFiles)' != ''">
      <Output TaskParameter="CopiedFiles" ItemName="ReferencesCopiedInThisBuild"/>
    </Copy>
    <Copy SourceFiles="@(AbiFiles)" DestinationFolder="$(OutDir)" SkipUnchangedFiles="true" Condition="'@(ChangedFiles)' != ''">
      <Output TaskParameter="CopiedFiles" ItemName="ReferencesCopiedInThisBuild"/>
    </Copy>
    <Touch Files="@(CopyUpToDateMarker)" AlwaysCreate="true" Condition="'@(ReferencesCopiedInThisBuild)' != ''" />
  </Target>

  <Target Name="Clean">
    <Delete Files="@(CopyUpToDateMarker)" />
    <RemoveDir Directories="$(OutDir)" />
  </Target>

  <Target Name="Rebuild" DependsOnTargets="Clean;Build" />
</Project>